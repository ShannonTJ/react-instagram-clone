{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\shann\\\\Desktop\\\\Web Dev Course\\\\FreeCodeCamp YT\\\\react-instagram-clone\\\\components\\\\main\\\\Search.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport firebase from \"firebase\";\n\nrequire(\"firebase/firestore\");\n\nexport default function Search(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  var fetchUsers = function fetchUsers(search) {\n    firebase.firestore().collection(\"users\").where(\"name\", \">=\", search).get().then(function (snapshot) {\n      var users = snapshot.docs.map(function (doc) {\n        var data = doc.data();\n        var id = doc.id;\n        return _objectSpread({\n          id: id\n        }, data);\n      });\n      setUsers(users);\n    });\n  };\n\n  return React.createElement(View, {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Type here...\",\n    onChangeText: function onChangeText(search) {\n      return fetchUsers(search);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    numColumns: 1,\n    horizontal: false,\n    data: users,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return props.navigation.navigate(\"Profile\", {\n            uid: item.id\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, item.name));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/shann/Desktop/Web Dev Course/FreeCodeCamp YT/react-instagram-clone/components/main/Search.js"],"names":["React","useState","firebase","require","Search","props","users","setUsers","fetchUsers","search","firestore","collection","where","get","then","snapshot","docs","map","doc","data","id","marginTop","item","navigation","navigate","uid","name"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAQA,OAAOC,QAAP,MAAqB,UAArB;;AACAC,OAAO,CAAC,oBAAD,CAAP;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAAA,kBACVJ,QAAQ,CAAC,EAAD,CADE;AAAA;AAAA,MAC7BK,KAD6B;AAAA,MACtBC,QADsB;;AAGpC,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,MAAD,EAAY;AAC7BP,IAAAA,QAAQ,CACLQ,SADH,GAEGC,UAFH,CAEc,OAFd,EAGGC,KAHH,CAGS,MAHT,EAGiB,IAHjB,EAGuBH,MAHvB,EAIGI,GAJH,GAKGC,IALH,CAKQ,UAACC,QAAD,EAAc;AAClB,UAAIT,KAAK,GAAGS,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkB,UAACC,GAAD,EAAS;AACrC,YAAMC,IAAI,GAAGD,GAAG,CAACC,IAAJ,EAAb;AACA,YAAMC,EAAE,GAAGF,GAAG,CAACE,EAAf;AACA;AAASA,UAAAA,EAAE,EAAFA;AAAT,WAAgBD,IAAhB;AACD,OAJW,CAAZ;AAKAZ,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAZH;AAaD,GAdD;;AAeA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEe,MAAAA,SAAS,EAAE;AAAb,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAC,cADd;AAEE,IAAA,YAAY,EAAE,sBAACZ,MAAD;AAAA,aAAYD,UAAU,CAACC,MAAD,CAAtB;AAAA,KAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,oBAAC,QAAD;AACE,IAAA,UAAU,EAAE,CADd;AAEE,IAAA,UAAU,EAAE,KAFd;AAGE,IAAA,IAAI,EAAEH,KAHR;AAIE,IAAA,UAAU,EAAE;AAAA,UAAGgB,IAAH,QAAGA,IAAH;AAAA,aACV,oBAAC,gBAAD;AACE,QAAA,OAAO,EAAE;AAAA,iBACPjB,KAAK,CAACkB,UAAN,CAAiBC,QAAjB,CAA0B,SAA1B,EAAqC;AAAEC,YAAAA,GAAG,EAAEH,IAAI,CAACF;AAAZ,WAArC,CADO;AAAA,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOE,IAAI,CAACI,IAAZ,CALF,CADU;AAAA,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAsBD","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  FlatList,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport firebase from \"firebase\";\r\nrequire(\"firebase/firestore\");\r\n\r\nexport default function Search(props) {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  const fetchUsers = (search) => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"name\", \">=\", search)\r\n      .get()\r\n      .then((snapshot) => {\r\n        let users = snapshot.docs.map((doc) => {\r\n          const data = doc.data();\r\n          const id = doc.id;\r\n          return { id, ...data };\r\n        });\r\n        setUsers(users);\r\n      });\r\n  };\r\n  return (\r\n    <View style={{ marginTop: 20 }}>\r\n      <TextInput\r\n        placeholder=\"Type here...\"\r\n        onChangeText={(search) => fetchUsers(search)}\r\n      />\r\n      <FlatList\r\n        numColumns={1}\r\n        horizontal={false}\r\n        data={users}\r\n        renderItem={({ item }) => (\r\n          <TouchableOpacity\r\n            onPress={() =>\r\n              props.navigation.navigate(\"Profile\", { uid: item.id })\r\n            }\r\n          >\r\n            <Text>{item.name}</Text>\r\n          </TouchableOpacity>\r\n        )}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}