{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\shann\\\\Desktop\\\\Web Dev Course\\\\FreeCodeCamp YT\\\\react-instagram-clone\\\\components\\\\Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport FeedScreen from \"./main/Feed\";\nimport ProfileScreen from \"./main/Profile\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { fetchUser } from \"../redux/actions\";\n\nvar EmptyScreen = function EmptyScreen() {\n  return null;\n};\n\nvar Tab = createBottomTabNavigator();\nexport var Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchUser();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Tab.Navigator, {\n        initialRouteName: \"Feed\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Feed\",\n        component: FeedScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n                size = _ref.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"home\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 15\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"AddContainer\",\n        component: EmptyScreen,\n        listeners: function listeners(_ref2) {\n          var navigation = _ref2.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Add\");\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color,\n                size = _ref3.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"plus-box\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 15\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var color = _ref4.color,\n                size = _ref4.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"account-circle\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 15\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchUser: fetchUser\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","map":{"version":3,"sources":["C:/Users/shann/Desktop/Web Dev Course/FreeCodeCamp YT/react-instagram-clone/components/Main.js"],"names":["React","Component","createBottomTabNavigator","MaterialCommunityIcons","FeedScreen","ProfileScreen","connect","bindActionCreators","fetchUser","EmptyScreen","Tab","Main","props","tabBarIcon","color","size","navigation","tabPress","event","preventDefault","navigate","mapStateToProps","store","currentUser","userState","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\r\n\r\nimport FeedScreen from \"./main/Feed\";\r\nimport ProfileScreen from \"./main/Profile\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { fetchUser } from \"../redux/actions\";\r\n\r\nconst EmptyScreen = () => {\r\n  return null;\r\n};\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport class Main extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchUser();\r\n  }\r\n  render() {\r\n    return (\r\n      <Tab.Navigator initialRouteName=\"Feed\">\r\n        <Tab.Screen\r\n          name=\"Feed\"\r\n          component={FeedScreen}\r\n          options={{\r\n            tabBarIcon: ({ color, size }) => (\r\n              <MaterialCommunityIcons name=\"home\" color={color} size={26} />\r\n            ),\r\n          }}\r\n        />\r\n        <Tab.Screen\r\n          name=\"AddContainer\"\r\n          component={EmptyScreen}\r\n          listeners={({ navigation }) => ({\r\n            tabPress: (event) => {\r\n              event.preventDefault();\r\n              navigation.navigate(\"Add\");\r\n            },\r\n          })}\r\n          options={{\r\n            tabBarIcon: ({ color, size }) => (\r\n              <MaterialCommunityIcons name=\"plus-box\" color={color} size={26} />\r\n            ),\r\n          }}\r\n        />\r\n        <Tab.Screen\r\n          name=\"Profile\"\r\n          component={ProfileScreen}\r\n          options={{\r\n            tabBarIcon: ({ color, size }) => (\r\n              <MaterialCommunityIcons\r\n                name=\"account-circle\"\r\n                color={color}\r\n                size={26}\r\n              />\r\n            ),\r\n          }}\r\n        />\r\n      </Tab.Navigator>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n  currentUser: store.userState.currentUser,\r\n});\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators({ fetchUser }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n"]},"metadata":{},"sourceType":"module"}