{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { USERS_DATA_STATE_CHANGE, USERS_POSTS_STATE_CHANGE, CLEAR_DATA } from \"../constants\";\nvar initialState = {\n  users: [],\n  usersLoaded: 0\n};\nexport var users = function users() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case USERS_DATA_STATE_CHANGE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        users: [].concat(_toConsumableArray(state.users), [action.user])\n      });\n\n    case USERS_POSTS_STATE_CHANGE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        usersLoaded: state.usersLoaded + 1,\n        users: state.users.map(function (user) {\n          return user.uid === action.uid ? _objectSpread(_objectSpread({}, user), {}, {\n            posts: action.posts\n          }) : user;\n        })\n      });\n\n    case CLEAR_DATA:\n      return {\n        users: [],\n        usersLoaded: 0\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/shann/Desktop/Web Dev Course/FreeCodeCamp YT/react-instagram-clone/redux/reducers/users.js"],"names":["USERS_DATA_STATE_CHANGE","USERS_POSTS_STATE_CHANGE","CLEAR_DATA","initialState","users","usersLoaded","state","action","type","user","map","uid","posts"],"mappings":";;;;;;;AAAA,SACEA,uBADF,EAEEC,wBAFF,EAGEC,UAHF;AAMA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,WAAW,EAAE;AAFM,CAArB;AAMA,OAAO,IAAMD,KAAK,GAAG,SAARA,KAAQ,GAAkC;AAAA,MAAjCE,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,uBAAL;AACE,6CACKM,KADL;AAEEF,QAAAA,KAAK,+BAAME,KAAK,CAACF,KAAZ,IAAmBG,MAAM,CAACE,IAA1B;AAFP;;AAIF,SAAKR,wBAAL;AACE,6CACKK,KADL;AAEED,QAAAA,WAAW,EAAEC,KAAK,CAACD,WAAN,GAAoB,CAFnC;AAGED,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYM,GAAZ,CAAgB,UAACD,IAAD;AAAA,iBACrBA,IAAI,CAACE,GAAL,KAAaJ,MAAM,CAACI,GAApB,mCAA+BF,IAA/B;AAAqCG,YAAAA,KAAK,EAAEL,MAAM,CAACK;AAAnD,eAA6DH,IADxC;AAAA,SAAhB;AAHT;;AAOF,SAAKP,UAAL;AACE,aAAO;AACLE,QAAAA,KAAK,EAAE,EADF;AAELC,QAAAA,WAAW,EAAE;AAFR,OAAP;;AAIF;AACE,aAAOC,KAAP;AApBJ;AAsBD,CAvBM","sourcesContent":["import {\r\n  USERS_DATA_STATE_CHANGE,\r\n  USERS_POSTS_STATE_CHANGE,\r\n  CLEAR_DATA,\r\n} from \"../constants\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  usersLoaded: 0,\r\n};\r\n\r\n//store state and update it when an action is received\r\nexport const users = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case USERS_DATA_STATE_CHANGE:\r\n      return {\r\n        ...state,\r\n        users: [...state.users, action.user],\r\n      };\r\n    case USERS_POSTS_STATE_CHANGE:\r\n      return {\r\n        ...state,\r\n        usersLoaded: state.usersLoaded + 1,\r\n        users: state.users.map((user) =>\r\n          user.uid === action.uid ? { ...user, posts: action.posts } : user\r\n        ),\r\n      };\r\n    case CLEAR_DATA:\r\n      return {\r\n        users: [],\r\n        usersLoaded: 0,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}