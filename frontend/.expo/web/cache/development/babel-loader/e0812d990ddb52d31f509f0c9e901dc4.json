{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\shann\\\\Desktop\\\\Web Dev Course\\\\FreeCodeCamp YT\\\\react-instagram-clone\\\\components\\\\main\\\\Feed.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { connect } from \"react-redux\";\nimport firebase from \"firebase\";\n\nrequire(\"firebase/firestore\");\n\nfunction Feed(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  useEffect(function () {\n    var posts = [];\n    console.log(props.usersLoaded);\n\n    if (props.usersLoaded == props.following.length) {\n      var _loop = function _loop(i) {\n        var user = props.users.find(function (el) {\n          return el.uid === props.following[i];\n        });\n\n        if (user != undefined) {\n          posts = [].concat(_toConsumableArray(posts), _toConsumableArray(user.posts));\n        }\n      };\n\n      for (var i = 0; i < props.following.length; i++) {\n        _loop(i);\n      }\n\n      posts.sort(function (x, y) {\n        return x.creation - y.creation;\n      });\n      setPosts(posts);\n    }\n  }, [props.usersLoaded]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.containerGallery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    numColumns: 1,\n    horizontal: false,\n    data: posts,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.containerImage,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.container,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }\n      }, item.user.name), React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: item.downloadURL\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }\n      }), React.createElement(Text, {\n        onPress: function onPress() {\n          return props.navigation.navigate(\"Comment\", {\n            postId: item.id,\n            uid: item.user.uid\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }\n      }, \"View Comments...\"));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  containerInfo: {\n    margin: 20\n  },\n  containerGallery: {\n    flex: 1\n  },\n  containerImage: {\n    flex: 1 / 3\n  },\n  image: {\n    flex: 1,\n    aspectRatio: 1 / 1\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser,\n    following: store.userState.following,\n    users: store.usersState.users,\n    usersLoaded: store.usersState.usersLoaded\n  };\n};\n\nexport default connect(mapStateToProps, null)(Feed);","map":{"version":3,"sources":["C:/Users/shann/Desktop/Web Dev Course/FreeCodeCamp YT/react-instagram-clone/components/main/Feed.js"],"names":["React","useState","useEffect","connect","firebase","require","Feed","props","posts","setPosts","console","log","usersLoaded","following","length","i","user","users","find","el","uid","undefined","sort","x","y","creation","styles","container","containerGallery","item","containerImage","name","image","uri","downloadURL","navigation","navigate","postId","id","StyleSheet","create","flex","containerInfo","margin","aspectRatio","mapStateToProps","store","currentUser","userState","usersState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, View, Text, Image, FlatList, Button } from \"react-native\";\r\nimport { connect } from \"react-redux\";\r\nimport firebase from \"firebase\";\r\nrequire(\"firebase/firestore\");\r\n\r\nfunction Feed(props) {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let posts = [];\r\n    console.log(props.usersLoaded);\r\n    if (props.usersLoaded == props.following.length) {\r\n      for (let i = 0; i < props.following.length; i++) {\r\n        const user = props.users.find((el) => el.uid === props.following[i]);\r\n\r\n        if (user != undefined) {\r\n          posts = [...posts, ...user.posts];\r\n        }\r\n      }\r\n      //order the posts\r\n      posts.sort(function (x, y) {\r\n        return x.creation - y.creation;\r\n      });\r\n      setPosts(posts);\r\n    }\r\n  }, [props.usersLoaded]);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.containerGallery}>\r\n        <FlatList\r\n          numColumns={1}\r\n          horizontal={false}\r\n          data={posts}\r\n          renderItem={({ item }) => (\r\n            <View style={styles.containerImage}>\r\n              <Text style={styles.container}>{item.user.name}</Text>\r\n              <Image style={styles.image} source={{ uri: item.downloadURL }} />\r\n              <Text\r\n                onPress={() =>\r\n                  props.navigation.navigate(\"Comment\", {\r\n                    postId: item.id,\r\n                    uid: item.user.uid,\r\n                  })\r\n                }\r\n              >\r\n                View Comments...\r\n              </Text>\r\n            </View>\r\n          )}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  containerInfo: {\r\n    margin: 20,\r\n  },\r\n  containerGallery: {\r\n    flex: 1,\r\n  },\r\n  containerImage: {\r\n    flex: 1 / 3,\r\n  },\r\n  image: {\r\n    flex: 1,\r\n    aspectRatio: 1 / 1,\r\n  },\r\n});\r\nconst mapStateToProps = (store) => ({\r\n  currentUser: store.userState.currentUser,\r\n  following: store.userState.following,\r\n  users: store.usersState.users,\r\n  usersLoaded: store.usersState.usersLoaded,\r\n});\r\nexport default connect(mapStateToProps, null)(Feed);\r\n"]},"metadata":{},"sourceType":"module"}