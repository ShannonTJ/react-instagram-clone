{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\shann\\\\Desktop\\\\Web Dev Course\\\\FreeCodeCamp YT\\\\react-instagram-clone\\\\components\\\\main\\\\Comment.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport firebase from \"firebase\";\n\nrequire(\"firebase/firestore\");\n\nexport default function Comment(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      comments = _useState2[0],\n      setComments = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      postId = _useState4[0],\n      setPostId = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      text = _useState6[0],\n      setText = _useState6[1];\n\n  useEffect(function () {\n    if (props.route.params.postId !== postId) {\n      firebase.firestore().collection(\"posts\").doc(props.route.params.uid).collection(\"userPosts\").doc(props.route.params.postId).collection(\"comments\").get().then(function (snapshot) {\n        var comments = snapshot.docs.map(function (doc) {\n          var data = doc.data();\n          var id = doc.id;\n          return _objectSpread({\n            id: id\n          }, data);\n        });\n        setComments(comments);\n        setPostId(props.route.params.postId);\n      });\n    }\n  }, [props.route.params.postId]);\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    numColumns: 1,\n    horizontal: false,\n    data: comments,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }, item.text));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/shann/Desktop/Web Dev Course/FreeCodeCamp YT/react-instagram-clone/components/main/Comment.js"],"names":["React","useState","useEffect","firebase","require","Comment","props","comments","setComments","postId","setPostId","text","setText","route","params","firestore","collection","doc","uid","get","then","snapshot","docs","map","data","id","item"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;AAEA,OAAOC,QAAP,MAAqB,UAArB;;AACAC,OAAO,CAAC,oBAAD,CAAP;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AAAA,kBACLL,QAAQ,CAAC,EAAD,CADH;AAAA;AAAA,MAC9BM,QAD8B;AAAA,MACpBC,WADoB;;AAAA,mBAETP,QAAQ,CAAC,EAAD,CAFC;AAAA;AAAA,MAE9BQ,MAF8B;AAAA,MAEtBC,SAFsB;;AAAA,mBAGbT,QAAQ,CAAC,EAAD,CAHK;AAAA;AAAA,MAG9BU,IAH8B;AAAA,MAGxBC,OAHwB;;AAKrCV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAII,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBL,MAAnB,KAA8BA,MAAlC,EAA0C;AACxCN,MAAAA,QAAQ,CACLY,SADH,GAEGC,UAFH,CAEc,OAFd,EAGGC,GAHH,CAGOX,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBI,GAH1B,EAIGF,UAJH,CAIc,WAJd,EAKGC,GALH,CAKOX,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBL,MAL1B,EAMGO,UANH,CAMc,UANd,EAOGG,GAPH,GAQGC,IARH,CAQQ,UAACC,QAAD,EAAc;AAClB,YAAId,QAAQ,GAAGc,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkB,UAACN,GAAD,EAAS;AACxC,cAAMO,IAAI,GAAGP,GAAG,CAACO,IAAJ,EAAb;AACA,cAAMC,EAAE,GAAGR,GAAG,CAACQ,EAAf;AACA;AAASA,YAAAA,EAAE,EAAFA;AAAT,aAAgBD,IAAhB;AACD,SAJc,CAAf;AAKAhB,QAAAA,WAAW,CAACD,QAAD,CAAX;AACAG,QAAAA,SAAS,CAACJ,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBL,MAApB,CAAT;AACD,OAhBH;AAiBD;AACF,GApBQ,EAoBN,CAACH,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBL,MAApB,CApBM,CAAT;AAsBA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,UAAU,EAAE,CADd;AAEE,IAAA,UAAU,EAAE,KAFd;AAGE,IAAA,IAAI,EAAEF,QAHR;AAIE,IAAA,UAAU,EAAE;AAAA,UAAGmB,IAAH,QAAGA,IAAH;AAAA,aACV,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,IAAI,CAACf,IAAZ,CADF,CADU;AAAA,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAcD","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, FlatList, Button, TextInput } from \"react-native\";\r\nimport firebase from \"firebase\";\r\nrequire(\"firebase/firestore\");\r\n\r\nexport default function Comment(props) {\r\n  const [comments, setComments] = useState([]);\r\n  const [postId, setPostId] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (props.route.params.postId !== postId) {\r\n      firebase\r\n        .firestore()\r\n        .collection(\"posts\")\r\n        .doc(props.route.params.uid)\r\n        .collection(\"userPosts\")\r\n        .doc(props.route.params.postId)\r\n        .collection(\"comments\")\r\n        .get()\r\n        .then((snapshot) => {\r\n          let comments = snapshot.docs.map((doc) => {\r\n            const data = doc.data();\r\n            const id = doc.id;\r\n            return { id, ...data };\r\n          });\r\n          setComments(comments);\r\n          setPostId(props.route.params.postId);\r\n        });\r\n    }\r\n  }, [props.route.params.postId]);\r\n\r\n  return (\r\n    <View>\r\n      <FlatList\r\n        numColumns={1}\r\n        horizontal={false}\r\n        data={comments}\r\n        renderItem={({ item }) => (\r\n          <View>\r\n            <Text>{item.text}</Text>\r\n          </View>\r\n        )}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}